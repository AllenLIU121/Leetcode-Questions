# Math
class Solution:
    def mySqrt(self, x: int) -> int:
        if x == 0:
            return 0
        ans = int(math.exp(0.5*math.log(x)))
        return ans+1 if (ans+1)**2<=x else ans

# Binary Search
class Solution:
    def mySqrt(self, x: int) -> int:
        if x == 0:
            return 0
        l, r = 0, x
        ans = 0
        while l <= r:
            mid = (l+r)//2
            if mid**2 <= x:
                ans = mid
                l = mid + 1
            else:
                r = mid - 1
        return ans
        
# Iteration
class Solution:
    def mySqrt(self, x: int) -> int:
        if x == 0:
            return 0
        x0, c = float(x), float(x)
        while True:
            xi = (x0 + c/x0)/2
            if abs(x0-xi) <= 1e-7:
                break
            x0 = xi
        return int(x0)
            
