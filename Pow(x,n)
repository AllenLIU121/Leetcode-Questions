# Quickmul and Regression
class Solution(object):
    def myPow(self, x, n):
        """
        :type x: float
        :type n: int
        :rtype: float
        """
        def quickmul(N):
            if N==0:
                return 1
            y = quickmul(N//2)
            return y*y if N % 2 == 0 else y*y*x 
        
        return quickmul(n) if n>=0 else 1/quickmul(-n)
        
# Quickmul and iteration
class Solution(object):
    def myPow(self, x, n):
        """
        :type x: float
        :type n: int
        :rtype: float
        """
        def quickMul(N):
            ans = 1.0
            x_contribute = x
            while N > 0:
                if N % 2 == 1:
                    ans *= x_contribute
                x_contribute *= x_contribute
                N //= 2
            
            return ans
        
        return quickMul(n) if n >= 0 else 1.0 / quickMul(-n)
